# agent-twitter-client-mcp Configuration

# Port Configuration
# MCP_HOST_PORT: The port on your host machine (what you'll connect to)
# MCP_CONTAINER_PORT: The port inside the Docker container
MCP_HOST_PORT=3001
MCP_CONTAINER_PORT=3000

# Twitter Authentication (choose one method)
# Method 1: Cookie-based authentication
AUTH_METHOD=cookies
TWITTER_COOKIES=["auth_token=YOUR_AUTH_TOKEN; Domain=.twitter.com", "ct0=YOUR_CT0_VALUE; Domain=.twitter.com", "twid=u%3DYOUR_USER_ID; Domain=.twitter.com"]

# Method 2: Username/password authentication
# AUTH_METHOD=credentials
# TWITTER_USERNAME=your_username
# TWITTER_PASSWORD=your_password
# TWITTER_EMAIL=your_email@example.com
# TWITTER_2FA_SECRET=your_2fa_secret

# Method 3: API-based authentication
# AUTH_METHOD=api
# TWITTER_API_KEY=your_api_key
# TWITTER_API_SECRET_KEY=your_api_secret_key
# TWITTER_ACCESS_TOKEN=your_access_token
# TWITTER_ACCESS_TOKEN_SECRET=your_access_token_secret

# NOTE FOR GROK FUNCTIONALITY:
# Grok requires username/password authentication if cookie authentication fails.
# For Grok examples, you can set both TWITTER_COOKIES and TWITTER_USERNAME/TWITTER_PASSWORD
# The examples will try cookie authentication first, then fall back to username/password
# This works regardless of the AUTH_METHOD setting above

# Logging Configuration
LOG_LEVEL=info # error, warn, info, debug

# Testing Configuration
RUN_INTEGRATION_TESTS=false
RUN_WRITE_TESTS=false

# Node.js Environment
NODE_ENV=production